const axios = require('axios');
require('dotenv').config();

const apiKey = process.env.NEWSDATA_API_KEY;

async function testNewsDataParams() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã newsdata.io API\n');
  
  const baseUrl = 'https://newsdata.io/api/1/latest';
  
  // –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
  console.log('üìä –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å (latest)');
  try {
    const response1 = await axios.get(baseUrl, {
      params: {
        apikey: apiKey,
        country: 'ar',
        size: 3
      }
    });
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${response1.data.results?.length || 0} —Å—Ç–∞—Ç–µ–π`);
    console.log(`üìÖ –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: ${response1.data.results?.[0]?.pubDate}`);
    console.log(`üÜî ID –ø–µ—Ä–≤–æ–π —Å—Ç–∞—Ç—å–∏: ${response1.data.results?.[0]?.article_id}`);
    console.log(`üìÑ nextPage: ${response1.data.nextPage || '–Ω–µ—Ç'}\n`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
  
  // –¢–µ—Å—Ç 2: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º page
  console.log('üìä –¢–µ—Å—Ç 2: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º page');
  try {
    const response2 = await axios.get(baseUrl, {
      params: {
        apikey: apiKey,
        country: 'ar',
        size: 3,
        page: '1754045948462779121'
      }
    });
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${response2.data.results?.length || 0} —Å—Ç–∞—Ç–µ–π`);
    console.log(`üìÖ –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: ${response2.data.results?.[0]?.pubDate}`);
    console.log(`üÜî ID –ø–µ—Ä–≤–æ–π —Å—Ç–∞—Ç—å–∏: ${response2.data.results?.[0]?.article_id}`);
    console.log(`üìÑ nextPage: ${response2.data.nextPage || '–Ω–µ—Ç'}\n`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
  
  // –¢–µ—Å—Ç 3: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º from_date (—Å–µ–≥–æ–¥–Ω—è)
  console.log('üìä –¢–µ—Å—Ç 3: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º from_date (—Å–µ–≥–æ–¥–Ω—è)');
  try {
    const today = new Date().toISOString().split('T')[0];
    const response3 = await axios.get(baseUrl, {
      params: {
        apikey: apiKey,
        country: 'ar',
        size: 3,
        from_date: today
      }
    });
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${response3.data.results?.length || 0} —Å—Ç–∞—Ç–µ–π`);
    console.log(`üìÖ –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: ${response3.data.results?.[0]?.pubDate}`);
    console.log(`üÜî ID –ø–µ—Ä–≤–æ–π —Å—Ç–∞—Ç—å–∏: ${response3.data.results?.[0]?.article_id}\n`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
  
  // –¢–µ—Å—Ç 4: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º to_date (–≤—á–µ—Ä–∞)
  console.log('üìä –¢–µ—Å—Ç 4: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º to_date (–≤—á–µ—Ä–∞)');
  try {
    const yesterday = new Date();
    yesterday.setDate(yesterday.getDate() - 1);
    const yesterdayStr = yesterday.toISOString().split('T')[0];
    
    const response4 = await axios.get(baseUrl, {
      params: {
        apikey: apiKey,
        country: 'ar',
        size: 3,
        to_date: yesterdayStr
      }
    });
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${response4.data.results?.length || 0} —Å—Ç–∞—Ç–µ–π`);
    console.log(`üìÖ –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: ${response4.data.results?.[0]?.pubDate}`);
    console.log(`üÜî ID –ø–µ—Ä–≤–æ–π —Å—Ç–∞—Ç—å–∏: ${response4.data.results?.[0]?.article_id}\n`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
  
  // –¢–µ—Å—Ç 5: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º q (–ø–æ–∏—Å–∫)
  console.log('üìä –¢–µ—Å—Ç 5: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º q (–ø–æ–∏—Å–∫)');
  try {
    const response5 = await axios.get(baseUrl, {
      params: {
        apikey: apiKey,
        country: 'ar',
        size: 3,
        q: 'Milei'
      }
    });
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${response5.data.results?.length || 0} —Å—Ç–∞—Ç–µ–π`);
    console.log(`üìÖ –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è: ${response5.data.results?.[0]?.pubDate}`);
    console.log(`üÜî ID –ø–µ—Ä–≤–æ–π —Å—Ç–∞—Ç—å–∏: ${response5.data.results?.[0]?.article_id}\n`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

testNewsDataParams(); 